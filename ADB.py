#!/usr/bin/python3

import subprocess

devices = subprocess.run(
    "adb devices | awk {'print $1'} | grep -v -E 'List'", capture_output=True, shell=True, text=True)
ip = str(devices.stdout).split("\n")
wifi, serials, Index_adb = [], [], None
for x in ip:
    if x == "":
        pass
    else:
        if "." in x:
            wifi.append(x)
        else:
            serials.append(x)
a = subprocess.run(
    "adb devices -l | grep -v ^$ | awk {'if(NR>1) print $0'}", shell=True, capture_output=True)
print(a.stdout.decode(), end="")
print()
ID = input("Enter the ip address( public or private )  or serial number :")
print('''\n
press 1  to install the apk in mobile
press 2  to uninstall the app from the mobile
press 3  to see installed application
press 4  to connect USB devices to wireless tcp
press 5  to see packages file path where the apk is present
press 6  to reboot the devices
press 7  to see assigned IP Address
press 8  to kill the ADB server
press 9  to start the ADB server
press 10 to see the android version
press 11 to send file from local machine to android device
press 12 to send file from android device to local machine
press 13 to clear all data of the application
press 14 to hide an application
press 15 to unhide an application
press 16 to open the shell
press 17 to uninstall the system apps
press 18 to know about the battery details''')
Index_adb = input(">>> ")
subprocess.run("clear", shell=True)
if Index_adb == "1":
    subprocess.run("adb -s {0} install {1}".format(ID,
                   input("Enter the path where the apk is present :")), shell=True)

elif Index_adb == "2":
    subprocess.run("adb -s {0} uninstall {1}".format(ID,
                   input("Enter the package name :")), shell=True)

elif Index_adb == "3":
    subprocess.run("adb -s {0} shell pm list packages".format(ID), shell=True)

elif Index_adb == "4":
    subprocess.run("adb -s {0} tcpip 5555".format(ID), shell=True)
    print("To check the IP rerun this program and press 2")

elif Index_adb == "5":
    subprocess.run(
        "adb -s {0} shell pm list packages -f".format(ID), shell=True)

elif Index_adb == "6":
    subprocess.run("adb -s {0} shell reboot".format(ID), shell=True)

elif Index_adb == "7":
    subprocess.run(
        "adb -s {0} shell ip -f inet addr show | grep inet | cut -d' ' -f6 | cut -d '/' -f 1".format(ID), shell=True)

elif Index_adb == "8":
    subprocess.run("adb kill-server", shell=True)

elif Index_adb == "9":
    subprocess.run("adb start-server", shell=True)

elif Index_adb == "10":
    subprocess.run(
        "adb -s {0} shell getprop ro.build.version.release".format(ID), shell=True)

elif Index_adb == "11":
    print("Note : '\\' not present in source path, If the destination path is not set it takes /sdcard as default")
    source_path = input("Enter the source path :")
    destination_path = input("Enter the destination path :")
    if destination_path == "":
        destination_path = "/sdcard"
    subprocess.run("adb -s {0} push {1} {2}".format(ID,
                   source_path, destination_path), shell=True)

elif Index_adb == "12":
    print("Note : '\\' not present in destination path, If the destination path is not set it takes download folder as default")
    source_path = input("Enter the source path :")
    destination_path = input("Enter the destination path :")
    if destination_path == "":
        destination_path = "~/Downloads"
    subprocess.run("adb -s {0} pull {1} {2}".format(ID,
                   source_path, destination_path), shell=True)
    whoami = str(subprocess.run("whoami", shell=True,capture_output=True, text=True).stdout).split("\n")[0]
    print("File is located in this path /home/{0}/Downloads".format(whoami))

elif Index_adb == "13":
    subprocess.run(
        "adb -s {0} shell pm clear {1}".format(ID, input("Enter the package name :")), shell=True)

elif Index_adb == "14":
    subprocess.run("adb -s {0} shell pm hide {1}".format(ID,
                   input("Enter the package name :")), shell=True)

elif Index_adb == "15":
    subprocess.run("adb -s {0} shell pm unhide {1}".format(ID,
                   input("Enter the package name :")), shell=True)

elif Index_adb == "16":
    subprocess.run("adb -s {0} shell".format(ID), shell=True)

elif Index_adb == "17":
    print('''Try this in own risk, we are not responsible for your activity
    This only uninstall for the current user. If you reset mobile it will restore to your devices...,''')
    subprocess.run("adb -s {0} shell pm uninstall -k --user 0 {1}".format(
        ID, input("Enter the package name :")), shell=True)
    value = input(
        '''to reinstall the uninstalled app press "yes" and "no to exit"''')
    if value == "yes":
        subprocess.run("adb -s {0} shell cmd package install-existing {1}".format(
            ID, input("Enter the package name :")), shell=True)
        del value
    elif value == "no":
        del value
        exit(0)
elif Index_adb == "18":
    subprocess.run("adb -s {0} shell dumpsys battery".format(ID), shell=True)
    value = input(
        '''To enter in to the Bonous command press "yes" to exit press "no"''')
    if value == "yes":
        print('''Here you are enter into the advanced battery setiing here you can change the battery status and
        Battery level, charging, discharging status
        ''')
        print()
        print('''press 1 to change the battery level range(0-100)
        press 2 to change the AC charging "on"
        press 3 to change the AC charging "off"
        press 4 to change the USB charging "on"
        press 5 to change the USB charging "off"
        press 6 to reset all above settings''')
        battery_state = input(">>> ")
        if battery_state == "1":
            subprocess.run("adb -s {0} dumpsys battery set level {1}".format(
                ID, input("Enter the value to set the battery percentage :")), shell=True)
        elif battery_state == "2":
            subprocess.run(
                "adb -s {0} dumpsys battery set ac 1".format(ID), shell=True)
        elif battery_state == "3":
            subprocess.run(
                "adb -s {0} dumpsys battery set ac 0".format(ID), shell=True)
        elif battery_state == "4":
            subprocess.run(
                "adb -s {0} dumpsys battery set usb 1".format(ID), shell=True)
        elif battery_state == "5":
            subprocess.run(
                "adb -s {0} dumpsys battery set usb 0".format(ID), shell=True)
        elif battery_state == "6":
            subprocess.run(
                "adb -s {0} dumpsys battery reset".format(ID), shell=True)

elif Index_adb == "19":
    print('''By default the apk will copy to the Downloads folder''')
    temp = str(subprocess.run("adb -s {0} shell pm path {1}".format(ID,input("Enter the package name :")),shell=True,capture_output=True,text=True).stdout).split("\n")[0]
    subprocess.run("adb pull {0} ~/Downloads",shell=True)
    whoami = str(subprocess.run("whoami", shell=True,capture_output=True, text=True).stdout).split("\n")[0]
    print("File is located in this path /home/{0}/Downloads".format(whoami))

elif Index_adb == "20":
     subprocess.run("adb -s {0} shell poweroff".format(ID),shell=True)
     print("success")

elif Index_adb == "21":
    subprocess.run("adb -s {0} logcat".format(ID),shell=True)

elif Index_adb == "22":
    subprocess.run("adb -s {0} shell monkey -p {1} -v 500".format(ID,input("Enter the package name :")),shell=True)

elif Index_adb == "23":
    subprocess.run("adb -s {0} shell ifconfig".format(ID),shell=True)

elif Index_adb == "24":
    subprocess.run("adb -s {0} shell netstat")
    if input('To see advanced command press "yes" and "no" to exit') == "yes":
        print('''press 1 to see TCP sockets
        press 2 to see UDP sockets
        press 3 to see RAW sockets
        press 4 to see unix sockets
        press 5 to see PID/program_name of sockets''')
        Value=input(">>> ")
        if Value == "1":
            subprocess.run("adb -s {0} shell netstat -t".format(ID),shell=True)
        elif Value == "2":
            subprocess.run("adb -s {0} shell netstat -u".format(ID),shell=True)
        elif Value == "3":
            subprocess.run("adb -s {0} shell netstat -w".format(ID),shell=True)
        elif Value == "4":
            subprocess.run("adb -s {0} shell netstat -x".format(ID),shell=True)
        elif Value == "5":
            subprocess.run("adb -s {0} shell netstat -p".format(ID),shell=True)
elif Index_adb == "25":
    subprocess.run("adb -s {0} shell ifconfig | grep wlan0 -A 8 | grep 'RX bytes' |cut -d " " -f 11-14".format(ID),shell=True)

elif Index_adb == "26":
    key = input('''To turn on press 1 and to turn off press 2
    >>> ''')
    if key == "1":
        subprocess.run("adb -s {0} shell svc wifi enable".format(ID),shell=True)
        del key
    elif key == "2":
        subprocess.run("adb -s {0} shell svc wifi disbale".format(ID),shell=True)
        del key

elif Index_adb == "27":
    subprocess.run("adb -s {0} shell dumpsys activity".format(ID),shell=True)

